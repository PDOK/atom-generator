server.document-root = "/output"
server.port = 80

server.modules += ( "mod_setenv" )
server.modules += ( "mod_status" )
server.modules += ( "mod_accesslog" )
server.modules += ( "mod_rewrite" )
server.modules += ( "mod_proxy" )

server.stream-response-body = 2

server.errorlog = "/dev/stderr"
accesslog.filename = "/dev/stderr"

setenv.set-response-header = ("Server" => "PDOK ATOM SERVER")

mimetype.assign = (
  ".html" => "text/html",
  ".txt" => "text/plain",
  ".xml" => "text/xml",
  ".css" => "text/css",
  ".js" => "application/javascript",
  ".xsl" => "text/xml",
  ".eot" => "application/vnd.ms-fontobject",
  ".svg" => "image/svg+xml",
  ".ttf" => "application/font-sfnt",
  ".woff" => "font/woff",
  ".woff2" => "font/woff2",
  ".jpg" => "image/jpeg",
  ".ico" => "image/x-icon",
  ".png" => "image/png",
  ".gml.zip" => "application/x-gmz",
  ".zip" => "application/zip",
  ".gml" => "application/gml+xml",
  ".gpkg" => "application/geopackage+sqlite3"
)

$HTTP["url"] =~ "(^/data/)" {
  proxy.server = ( "" => ( "" => ( "host" => "127.0.0.1", "port" => 81 )))
}

# Part for proxy listening on port 81
$SERVER["socket"] == ":81" {
  url.rewrite-once = ( "^/data/(.*)$" => "/$1" )
  proxy.server = ( "" =>
    (
     "webapp:81" => # name
      (
        "host" => "minio",
        "port" => 9000
      )
    )
  )
}